{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/FormManager.ts","webpack:///./src/Section.ts","webpack:///./src/SectionsController.ts","webpack:///./src/State.ts","webpack:///./src/app.ts","webpack:///./src/components/ProgressBar.ts","webpack:///./src/components/ProgressBarValue.ts","webpack:///./src/utils/enums.ts","webpack:///./src/utils/helpers.ts"],"names":[],"mappings":"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","file":"app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/app.ts\");\n","import State from './State'\n\ntype Data = {\n    informacoesPessoais: any;\n    residuos: { nome: string; recipientes: { [x: string]: string } }[];\n}\n\nexport default class FormManager {\n    private _state: State;\n    private _states: State[];\n\n    constructor() {\n        this.state = new State()\n        this._states = []\n    }\n\n    set state(state: State) {\n        this._state = state\n    }\n\n    get state(): State {\n        return this._state\n    }\n\n    get states(): State[] {\n        return this._states\n    }\n\n    save(state: State): void {\n        if (!this._states.includes(state)) {\n            this._states.push(state)\n            const newState = new State()\n            this.state = newState\n        }\n    }\n\n    hasState(): boolean {\n        return this._states.length > 0\n    }\n\n    removeState(index: number): void {\n        this._states = this._states.filter((_value, idx) => idx !== index)\n    }\n\n    editState(index: number): void {\n        this.state = this._states[index]\n    }\n\n    send(): void {\n        console.log(this.data)\n    }\n\n    private get data(): Data {\n        const data = {\n            informacoesPessoais: State.userInfo,\n            servico: State.service || null,\n            industria: State.industry || null,\n            residuos: this.getSelectedResidues()\n        }\n\n        return data\n    }\n\n    private getSelectedResidues(): any[] {\n        return this._states.reduce((acc, curr) => {\n            const residuo = {\n                nome: curr.residuo.nome,\n                recipientes: curr.calculoMontante.recipientes\n            }\n            acc.push(residuo)\n            return acc\n        }, [])\n    }\n}\n","/* eslint-disable no-alert */\nimport SectionsController from './SectionsController'\nimport Residuo from './utils/Residuo'\nimport { Sections } from './utils/enums'\nimport State from './State'\nimport ProgressBar from './components/ProgressBar'\n\nexport default class Section {\n    private _name: string\n    controller: SectionsController\n    private _position: number;\n    private _rootElement: HTMLElement\n    private _onMount: ((this: this) => void)[]\n    private _satisfied: boolean\n\n    constructor(name: string, step: number) {\n        this._name = name\n        this._position = step\n        this._rootElement = document.querySelector(`[data-section=${name}`) as HTMLElement\n        this._onMount = []\n        this._satisfied = false\n    }\n\n    get name(): string { return this._name }\n\n    get position(): number { return this._position }\n\n    get state(): State { return this.controller.state }\n\n    get data(): Residuo[] { return this.controller.data }\n\n    set isSatisfied(value: boolean) { this._satisfied = value }\n\n    get isSatisfied(): boolean { return this._satisfied }\n\n    mount(): void {\n        this._rootElement.classList.add('active')\n        this._onMount.forEach(onMount => onMount.bind(this)())\n        this.fillProgressBar()\n        this.addCardsClickEvent()\n        this.addBindings()\n        this.addButtonsClickEvents()\n    }\n\n    unmount(): void {\n        this._rootElement.classList.remove('active')\n    }\n\n    onMount(...callback: ((this: this) => void)[]): void {\n        this._onMount.push(...callback)\n    }\n\n    query(selector: string): HTMLElement {\n        return this._rootElement.querySelector(selector) as HTMLElement\n    }\n\n    queryAll(selector: string): HTMLElement[] {\n        return Array.from(\n            this._rootElement.querySelectorAll(selector) as NodeListOf<HTMLElement>\n        )\n    }\n\n    removeAllChildrenFrom(progressBar: HTMLElement): void {\n        while (progressBar.firstChild)\n            progressBar.removeChild(progressBar.firstChild)\n    }\n\n    private addBindings(): void {\n        const bindings = this.queryAll('[data-bind]')\n        bindings.forEach(binding => {\n            let value\n            if (binding.dataset.bind.includes(':')) {\n                const [state, key] = binding.dataset.bind.split(':')\n                if (this.state[state])\n                    value = this.state[state][key]\n            } else {\n                value = this.state[binding.dataset.bind]\n            }\n\n            if (!value)\n                return binding.parentElement.style.display = 'none'\n\n            binding.parentElement.style.display = 'block'\n\n            if (binding.hasAttribute('data-transform'))\n                value = value\n                    .map(v => Object.values(v))\n                    .map(v=> `<li>${v}</li>`)\n                    .join(' ')\n\n            binding.innerHTML = value\n        })\n\n        this.bindFormFields()\n        this.bindSidebarFields()\n    }\n\n    private bindSidebarFields(): string {\n        const aside = document.querySelector('[data-aside]') as HTMLElement\n        if (!State.userInfo.nome && !this.controller.hasState()) return (aside.innerHTML = '')\n\n        aside.innerHTML = this.getResiduesListingMarkup()\n\n        if (State.userInfo.nome)\n            aside.insertAdjacentHTML('beforeend', this.getUserInfoListingMarkup())\n\n        this.addEditButtonsClickEvents()\n        this.addRemoveButtonsClickEvents()\n    }\n\n    // eslint-disable-next-line max-statements\n    private bindFormFields(): void {\n        if (this._name === Sections.CALCULO_MONTANTE) {\n            this.isSatisfied = true\n            const frequenciaInput = this.query('input[name=frequencia]') as HTMLInputElement\n            const periodoSelect = this.query('select[name=periodo]') as HTMLSelectElement\n            const recipientesInput = this.queryAll('input[name=quantidade]') as HTMLInputElement[]\n\n            frequenciaInput.value = this.state.calculoMontante.frequencia.toString()\n            periodoSelect.value = this.state.calculoMontante.periodo.toString()\n\n            frequenciaInput.onchange = (): number => (\n                this.state.calculoMontante.frequencia = frequenciaInput.valueAsNumber\n            )\n            periodoSelect.onchange = (): string => (\n                this.state.calculoMontante.periodo = periodoSelect.value\n            )\n            recipientesInput.forEach(input => {\n                const recipiente = this.state.calculoMontante.recipientes[input.id]\n                if (recipiente) input.value = recipiente.toString()\n                input.onchange = (): number => (\n                    this.state.calculoMontante.recipientes[input.id] = input.valueAsNumber\n                )\n            })\n        }\n\n        if (this._name === Sections.INFO_PESSOAIS) {\n            const inputs = this.queryAll('input, textarea') as HTMLInputElement[]\n            inputs.forEach(input => {\n                input.value = State.userInfo[input.name]\n                input.onchange = (): string => State.userInfo[input.name] = input.value\n            })\n        }\n    }\n\n    private clearCurrentForm(): void {\n        const inputs = this.queryAll('input, select') as HTMLInputElement[]\n        inputs.forEach(input => input.value = input.defaultValue || '')\n    }\n\n    private isValid(inputs: HTMLInputElement[]): boolean {\n        return inputs.every(input => {\n            input.reportValidity()\n            return input.checkValidity()\n        })\n    }\n\n    private getUserInfoListingMarkup(): string {\n        return /* html */`\n                <div>\n                    <h3>Informações de Contato</h3>\n                    <p>${State.contato.toString()}</p>\n                    <div>\n                        <button data-edit class=\"btn__secondary btn__secondary--edit\">\n                            Editar\n                        </button>\n                    </div>\n                </div>\n            `\n    }\n\n    private getResiduesListingMarkup(): string {\n        return this.controller.states.map((state, idx) => {\n            if (state.calculoMontante.periodo)\n                return /* html */`\n                    <div>\n                        <h3>Resíduo</h3>\n                        <p>${state.residuo.nome}</p>\n                        <h3>Frequência</h3>\n                        <p>${state.frequencia}</p>\n                        <h3>Recipiente(s)</h3>\n                        <p>${state.recipientes}</p>\n                        <div>\n                            <button data-edit=\"${idx}\" class=\"btn__secondary btn__secondary--edit\">\n                                Editar\n                            </button>\n                            <button data-remove=\"${idx}\" class=\"btn__secondary btn__secondary--remove\">\n                                Excluir\n                            </button>\n                        </div>\n                    </div>\n                `\n            return ''\n        }).join(' ')\n    }\n\n    private fillProgressBar(): void {\n        const progressBar = new ProgressBar(this.controller)\n        progressBar.fillUntil(this)\n        progressBar.renderAt(this.query('.progress'))\n    }\n\n    private onClick(element: HTMLElement, cb: (event: Event) => void): void {\n        if (element)\n            element.onclick = (event): void => {\n                event.preventDefault()\n                cb(event)\n            }\n    }\n\n    private addRemoveButtonsClickEvents(): void {\n        const remove = document.querySelectorAll('[data-remove]') as NodeListOf<HTMLButtonElement>\n        remove.forEach(btn => {\n            this.onClick(btn, () => {\n                if (window.confirm('Deseja realmente excluir este item?')) {\n                    this.controller.removeState(btn.dataset.remove)\n                    this.controller.moveTo(this._name)\n                }\n            })\n        })\n    }\n\n    private addEditButtonsClickEvents(): void {\n        const edit = document.querySelectorAll('[data-edit]') as NodeListOf<HTMLButtonElement>\n        edit.forEach(btn => {\n            const redirect = (dest: Section): void => {\n                const confirm = dest.query('.submit') as HTMLButtonElement\n                confirm.textContent = 'Ok'\n                this.onClick(confirm, () => this.controller.moveTo(Sections.REVISE_PEDIDO))\n            }\n\n            this.onClick(btn, () => {\n                if (btn.dataset.edit !== '') {\n                    this.controller.editState(btn.dataset.edit)\n                    return this.controller.moveTo(Sections.CALCULO_MONTANTE, redirect)\n                }\n                return this.controller.moveTo(Sections.INFO_PESSOAIS, redirect)\n            })\n        })\n    }\n\n    private addButtonsClickEvents(): void {\n        const saveButton = this.query('[data-save]')\n        const submitButton = this.query('[type=submit]')\n        const clearButton = this.query('.clear')\n\n        this.onClick(saveButton, () => this.controller.save())\n        this.onClick(submitButton, () => this.controller.send())\n        this.onClick(clearButton, () => this.clearCurrentForm())\n    }\n\n    private addCardsClickEvent(): void {\n        const cards = this.query('[data-cards]')\n        if (cards) {\n            const cardButtons = cards.querySelectorAll('button')\n            cardButtons.forEach(card => this.addCardClickEvent(card))\n        }\n        this.addActionsClickEvent()\n    }\n\n    private addCardClickEvent(card: HTMLButtonElement): void {\n        card.addEventListener('click', event => {\n            event.preventDefault()\n            if (this._name === Sections.MODO_DE_PESQUISA)\n                this.state.searchMode = card.dataset.card\n            if (this._name === Sections.INDUSTRIAS)\n                this.state.industry = card.dataset.card\n            if (this._name === Sections.SERVICOS)\n                this.state.service = card.dataset.card\n            if (this._name === Sections.RESIDUOS)\n                this.state.residuo = this.data.find(({ slug }) => (slug === card.dataset.card))\n            this.isSatisfied = true\n        })\n    }\n\n    private addActionsClickEvent(): void {\n        this.queryAll('[data-action]').forEach(action => {\n            action.onclick = (event): void => {\n                event.preventDefault()\n                const inputs = this.queryAll('input, select') as HTMLInputElement[]\n                if (this.isValid(inputs)) {\n                    this.controller.moveTo(action.dataset.action)\n                    this.isSatisfied = true\n                }\n            }\n        })\n    }\n}\n","import Section from './Section'\nimport Residuo from './utils/Residuo'\nimport FormManager from './FormManager'\nimport State from './State'\nimport { Sections } from './utils/enums'\n\nexport default class SectionController {\n    private _active: Section\n    private _previous: Section\n    private _sections: Map<string, Section> = new Map()\n    private _manager: FormManager\n    private _history: string[] = []\n    data: Residuo[]\n\n    constructor(manager: FormManager, data: Residuo[]) {\n        this.data = data\n        this._manager = manager\n        window.addEventListener('popstate', (): void => {\n            this._history.pop()\n            if (this._history.length > 0)\n                this.moveTo(this._history.pop())\n        })\n    }\n\n    get state(): State {\n        return this._manager.state\n    }\n\n    get states(): State[] {\n        return this._manager.states\n    }\n\n    set active(section: Section) {\n        this.previous = this._active\n        this._active = section\n        this._history.push(section.name)\n        this.changeHistoryState(section)\n        this._active.mount()\n    }\n\n    get active(): Section {\n        return this._active\n    }\n\n    set previous(section: Section) {\n        this._previous = section\n        if (this._previous) this._previous.unmount()\n    }\n\n    get previous(): Section {\n        return this._previous\n    }\n\n    get sections(): Map<string, Section> {\n        return this._sections\n    }\n\n    private changeHistoryState(section: Section): void {\n        this._history.length > 0 ?\n            history.pushState({ section: section.name }, section.name) :\n            history.replaceState({ section: section.name }, section.name)\n    }\n\n    append(...sections: Section[]): void {\n        sections.forEach(section => {\n            section.controller = this\n            this._sections.set(section.name, section)\n        })\n    }\n\n    find(key: string): Section {\n        return this._sections.get(key)\n    }\n\n    moveTo(key: string, cb?: (destSection: Section) => void): void {\n        this.active = this.find(key)\n        if (cb) cb(this.active)\n    }\n\n    save(): void {\n        this._manager.save(this.state)\n        this.moveTo(Sections.RESIDUOS)\n    }\n\n    send(): void {\n        this._manager.save(this.state)\n        this._manager.send()\n    }\n\n    hasState(): boolean {\n        return this._manager.hasState()\n    }\n\n    removeState(index: string): void {\n        this._manager.removeState(parseInt(index, 10))\n    }\n\n    editState(index: string): void {\n        this._manager.editState(parseInt(index, 10))\n    }\n\n    clear(): void {\n        const message = 'Tem certeza que deseja limpar o formulário?'\n        // eslint-disable-next-line no-alert\n        if (window.confirm(message)) location.reload()\n    }\n}\n","import Residuo from './utils/Residuo'\n\nexport default class State {\n    static searchMode: string\n    static industry: string\n    static service: string\n    residuo: Residuo\n    calculoMontante: {\n        frequencia: number;\n        periodo: string;\n        recipientes: {\n            [x: string]: number;\n        };\n    }\n    static userInfo = {\n        nome: '',\n        telefone: '',\n        email: '',\n        empresa: '',\n        cnpj: '',\n        cep: '',\n        endereco: '',\n        numero: '',\n        complemento: '',\n        observacao: ''\n    }\n\n    constructor() {\n        this.calculoMontante = {\n            frequencia: 1,\n            periodo: '',\n            recipientes: {}\n        }\n    }\n\n    get frequencia(): string {\n        const { frequencia, periodo } = this.calculoMontante\n        return !periodo ? '' :\n            `${frequencia}x por ${periodo}`\n    }\n\n    get recipientes(): string {\n        const { recipientes } = this.calculoMontante\n        return Object.keys(recipientes)\n            .map(container => `${container} (${recipientes[container]})<br>`)\n            .join(' ')\n    }\n\n    static get contato(): string {\n        const { nome, telefone, empresa, endereco, numero, observacao } = State.userInfo\n        return `\n            ${nome}<br>\n            ${telefone}<br>\n            ${empresa}<br>\n            ${endereco}, ${numero}<br>\n            ${observacao}\n        `\n    }\n\n    get contato(): string { return State.contato }\n\n    set industry(value: string) { State.industry = value }\n\n    get industry(): string { return State.industry }\n\n    set searchMode(value: string) { State.searchMode = value }\n\n    get searchMode(): string { return State.searchMode }\n\n    set service(value: string) { State.service = value }\n\n    get service(): string { return State.service }\n}\n","import { fetchData, loadResiduesCards, extractDropdownOptionsMarkup, extractIndustriesFrom } from './utils/helpers'\nimport SectionsController from './SectionsController'\nimport { Sections } from './utils/enums'\nimport FormManager from './FormManager'\nimport Section from './Section'\n\nconst loading = document.querySelector('.loading') as HTMLDivElement\n\n(async (): Promise<void> => {\n    const data = await fetchData()\n    const manager = new FormManager()\n    const controller = new SectionsController(manager, data)\n    loading.remove()\n\n    const sections = []\n\n    controller.append(\n        new Section(Sections.MODO_DE_PESQUISA, 1),\n        new Section(Sections.INDUSTRIAS, 2),\n        new Section(Sections.SERVICOS, 2),\n        new Section(Sections.RESIDUOS, 3),\n        new Section(Sections.CALCULO_MONTANTE, 4),\n        new Section(Sections.INFO_PESSOAIS, 5),\n        new Section(Sections.REVISE_PEDIDO, 6),\n        new Section(Sections.PEDIDO_ENVIADO, 7)\n    )\n\n    controller.find(Sections.RESIDUOS).onMount(function() {\n        const cards = this.query('[data-cards]')\n        const description = this.query('.cards-description')\n        const industries = extractIndustriesFrom(this.data)\n        loadResiduesCards(this.state, this.data, cards)\n        if (description) description.remove()\n        if (this.state.industry) {\n            const markup = /*html*/`\n                <p class=\"cards-description\">\n                    Normalmente, a <strong>indústria\n                    <span>${industries.get(this.state.industry).toLowerCase()}</strong> gera os seguintes tipos de resíduos:\n                </p>\n            `\n            cards.insertAdjacentHTML('beforebegin', markup)\n        }\n    })\n\n    controller.find(Sections.CALCULO_MONTANTE).onMount(function() {\n        const recipients = this.query('.iq__options')\n        const activator = recipients.previousElementSibling as HTMLElement\n        const containers = this.state.residuo.containers[0].container\n        recipients.innerHTML = extractDropdownOptionsMarkup(containers)\n        activator.onclick = (): boolean => recipients.parentElement.classList.toggle('active')\n    })\n\n    controller.moveTo(Sections.MODO_DE_PESQUISA)\n})()\n\n","import Section from '../Section'\nimport ProgressBarValue from './ProgressBarValue'\nimport SectionsController from '../SectionsController'\n\nexport default class ProgressBar {\n    private _sections: Section[]\n    private _values: ProgressBarValue[]\n    private _controller: SectionsController\n    private _activeSectionIndex: number\n\n    constructor(controller: SectionsController) {\n        this._controller = controller\n        this._sections = Array.from(this._controller.sections.values())\n        this._values = this._sections.map(section => new ProgressBarValue(section))\n        this.moveSectionIfActive = this.moveSectionIfActive.bind(this)\n        // window.addEventListener('popstate', (event): void => {\n        //     event.preventDefault()\n        // })\n    }\n\n    get markup(): string {\n        return this._values.map(value => value.element.outerHTML).join(' ')\n    }\n\n    fillUntil(activeSection: Section): void {\n        this._activeSectionIndex = this._sections.indexOf(activeSection)\n        for (let i = 0; i <= this._activeSectionIndex; i++)\n            this._values[i].fill()\n    }\n\n    renderAt(container: HTMLElement): void {\n        container.innerHTML = ''\n        const steps = this.appendStepsDiv(container)\n        this._values.forEach(value => {\n            steps.appendChild(value.element)\n            value.addOnClickEvent(this.moveSectionIfActive)\n        })\n    }\n\n    private appendStepsDiv(container: HTMLElement): HTMLDivElement {\n        const steps = this.createStepsDiv()\n        container.appendChild(steps)\n        this.appendMoveButtons(steps)\n        return steps\n    }\n\n    private appendMoveButtons(steps: HTMLDivElement): void {\n        steps.insertAdjacentElement('beforebegin', this.createPreviousAction())\n        steps.insertAdjacentElement('afterend', this.createNextButton())\n    }\n\n    private createStepsDiv(): HTMLDivElement {\n        const steps = document.createElement('div')\n        steps.classList.add('steps')\n        return steps\n    }\n\n    private createPreviousAction(): HTMLDivElement {\n        const previousButton = document.createElement('div')\n        const previousIndex = this._activeSectionIndex - 1\n        previousButton.classList.add('previous')\n\n        previousIndex >= 0 ?\n            previousButton.classList.add('active') :\n            previousButton.classList.remove('active')\n\n        previousButton.innerHTML = '<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\"/></svg>'\n        previousButton.onclick = (): void => {\n            if (previousIndex >= 0)\n                this._controller.moveTo(this._sections[previousIndex].name)\n        }\n        return previousButton\n    }\n\n    private createNextButton(): HTMLDivElement {\n        const nextButton = document.createElement('div')\n        const nextIndex = this._activeSectionIndex + 1\n        nextButton.classList.add('next')\n        const section = this._sections[this._activeSectionIndex]\n\n        nextIndex < this._values.length && section.isSatisfied ?\n            nextButton.classList.add('active') :\n            nextButton.classList.remove('active')\n\n        nextButton.innerHTML = '<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\"/></svg>'\n        nextButton.onclick = (): void => {\n            if (nextIndex < this._values.length && section.isSatisfied)\n                this._controller.moveTo(this._sections[nextIndex].name)\n        }\n        return nextButton\n    }\n\n    private moveSectionIfActive(progressValue: ProgressBarValue, section: Section): void {\n        if (progressValue.isActive) this._controller.moveTo(section.name)\n    }\n}\n","import Section from '../Section'\n\nexport default class ProgressBarValue {\n    private _element: HTMLElement;\n    private _section: Section\n\n    constructor(section: Section) {\n        this._section = section\n        this._element = document.createElement('div')\n        this._element.classList.add('progress__value')\n    }\n\n    get element(): HTMLElement {\n        return this._element\n    }\n\n    get isActive(): boolean {\n        return this._element.classList.contains('active')\n    }\n\n    fill(): void {\n        this._element.classList.add('active')\n    }\n\n    addOnClickEvent(callback: (progressValue: ProgressBarValue, section: Section) => void): void {\n        this._element.onclick = (): void => (\n            callback(this, this._section)\n        )\n    }\n}\n","export enum Sections {\n    MODO_DE_PESQUISA = 'modo-de-pesquisa',\n    INDUSTRIAS = 'industrias',\n    SERVICOS = 'servicos',\n    RESIDUOS = 'residuos',\n    CALCULO_MONTANTE = 'calculo-montante',\n    INFO_PESSOAIS = 'informacoes-pessoais',\n    REVISE_PEDIDO = 'revise-seu-pedido',\n    PEDIDO_ENVIADO = 'pedido-enviado'\n}\n","import Residuo from './Residuo'\nimport State from '../State'\nimport { Sections } from './enums'\n\nexport const addSlugProps = (residuo): object => {\n    residuo.slug = slug(residuo.nome)\n    residuo.industrias = residuo.industrias.reduce((acc, curr) => {\n        acc[slug(curr)] = curr\n        return acc\n    }, {})\n    return residuo\n}\n\nexport function slug(text: string): string {\n    let str = text.replace(/^\\s+|\\s+$/g, '')\n    str = str.toLowerCase()\n\n    const from = 'ãàáäâèéëêìíïîòóöôùúüûñç·/_,:;'\n    const to = 'aaaaaeeeeiiiioooouuuunc------'\n\n    for (let i = 0, l = from.length ; i < l ; i++)\n        str = str.replace(new RegExp(from.charAt(i), 'g'), to.charAt(i))\n\n    str = str.replace(/[^a-z0-9 -]/g, '')\n        .replace(/\\s+/g, '-')\n        .replace(/-+/g, '-')\n\n    return str\n}\n\nconst endpoint = 'http://gruporodocon.com.br/residuos3/wp-json/wp/v2/pages/45'\nexport const fetchData = async (): Promise<Residuo[]> => {\n    const response = await fetch(endpoint)\n    const data = await response.json()\n    const result = data.acf.card_residuo\n    return result.map(addSlugProps)\n}\n\nexport function hasTreatment(): (value: Residuo) => boolean {\n    return (residuo: Residuo): boolean => residuo.tratamento\n}\n\nexport function belongsTo(industry: string): (value: Residuo) => boolean {\n    return (residuo: Residuo): boolean => {\n        const industrias = Object.keys(residuo.industrias)\n        return industrias.includes(industry)\n    }\n}\n\nexport function loadResiduesCards(state: State, data: Residuo[], cards: HTMLElement): void {\n    const filteredResidues = data.filter(chooseFilter(state))\n    cards.innerHTML = filteredResidues.map(residuo => (\n        toMarkup(\n            residuo.slug,\n            residuo.nome,\n            residuo.icone,\n            Sections.CALCULO_MONTANTE\n        )\n    )).join(' ')\n}\n\nexport function loadIndustriesCards(data: Residuo[], cards: HTMLElement): void {\n    const industries = extractIndustriesFrom(data)\n    cards.innerHTML = Array.from(industries)\n        .map(([key, name]) => toMarkup(key, name, null, Sections.RESIDUOS))\n        .join(' ')\n}\n\nexport function extractIndustriesFrom(data: Residuo[]): Map<string, string> {\n    const extractMap = (acc: Map<string, string>, curr: object): Map<string, string> => {\n        Object.keys(curr).forEach(key => (acc.set(key, curr[key])))\n        return acc\n    }\n    return data.map(residuo => residuo.industrias)\n        .reduce(extractMap, new Map()) as Map<string, string>\n}\n\nexport function toMarkup(key: string, name: string, icon: string, action: Sections): string {\n    return (`\n        <button data-card=\"${key}\" data-action=\"${action}\">\n            <img src=\"${icon}\" alt=\"${name}\"/>\n            <h3>${name}</h3>\n        </button>\n    `)\n}\n\nexport function chooseFilter(state: State): (value: Residuo) => boolean {\n    const { industry, service } = state\n\n    let filter: (value: Residuo) => boolean = (): boolean => true\n\n    if (industry)\n        filter = belongsTo(industry)\n\n    if (service === 'tratamento-de-residuos')\n        filter = hasTreatment()\n\n    return filter\n}\n\nexport function extractDropdownOptionsMarkup(containers: string[]): string {\n    return containers.map(container => (`\n        <div class=\"iq__option\">\n            <span class=\"iq__label\">${container}</span>\n            <input type=\"number\" name=\"quantidade\" min=\"0\" value=\"0\" id=\"${container}\">\n        </div>\n    `)).join(' ')\n}\n"],"sourceRoot":""}